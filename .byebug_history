c
@current_user = User.find_by_auth_token(auth_token)
c
exit
token
user.authorization_token
user.authorization_token == token
user.present?
 data['exp'].to_i <= DateTime.now.to_i
user= User.find(data['id'])
data = JWT.decode(token, Rails.configuration.secrets.jwt_secret).first
token
c
User.find_by_auth_token(auth_token)
auth_token
c
token
auth_token
data = JWT.decode(token, Rails.configuration.secrets.jwt_secret).first
@current_user = User.find_by_auth_token(auth_token)
c
 @current_user = User.find_by_auth_token(auth_token)
c
data['exp'].to_i <= DateTime.now.to_i
data['exp'].to_i > DateTime.now.to_i
user.nil?
user= User.find(data['id'])
data = JWT.decode(token, Rails.configuration.secrets.jwt_secret).first
c
auth_token
@current_user = User.find_by_auth_token(auth_token)
exit
session[:authorization]
auth_token
@current_user = User.find_by_auth_token(auth_token)
